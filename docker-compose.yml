version: '3.8'

services:
  # Message Broker - Redis
  redis:
    image: redis:7-alpine
    container_name: inferline-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # InferLine Gateway
  gateway:
    build:
      context: .
      dockerfile: docker/gateway/Dockerfile
    container_name: inferline-gateway
    ports:
      - "8000:8000"
    environment:
      - BROKER_URL=redis://redis:6379/0
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - ./src:/app/src
      - ./logs:/app/logs
    command: uvicorn inferline.gateway.app:app --host 0.0.0.0 --port 8000 --reload
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Example Provider
  provider:
    build:
      context: .
      dockerfile: docker/provider/Dockerfile
    container_name: inferline-provider
    environment:
      - BROKER_URL=redis://redis:6379/0
      - GATEWAY_URL=http://gateway:8000
      - PROVIDER_NAME=example-provider
    depends_on:
      gateway:
        condition: service_healthy
    volumes:
      - ./src:/app/src
      - ./logs:/app/logs
    command: python -m inferline.provider.client
    deploy:
      replicas: 2


volumes:
  redis_data:

networks:
  default:
    name: inferline-network