[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["."]
include = ["inferline"]
exclude = ["logs", "nginx", "docker"]

[project]
name = "inferline"
version = "0.1.0"
description = "A pull-based LLM router with long polling capabilities"
authors = [
    {name = "InferLine Contributors", email = "contributors@inferline.dev"}
]
readme = "README.md"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
keywords = ["llm", "ai", "router", "inference", "pull-based", "long-polling"]
requires-python = ">=3.9"
dependencies = [
    # Core web framework
    "fastapi==0.116.1",
    "flask==3.1.1",
    "uvicorn[standard]==0.24.0",
    
    # Data validation and settings
    "pydantic==2.11.7",
    "pydantic-settings==2.0.0",
    
    # HTTP client and WebSocket support
    "httpx==0.28.1",
    "aiohttp==3.12.15",
    "requests==2.32.4",
    "websockets==15.0.1",
    
    # Logging
    "structlog==25.4.0",
    
    # CLI
    "typer==0.9.0",
    "rich==13.0.0",
]

[project.scripts]
inferline = "inferline.cli:app"
inferline-openai-provider = "inferline.openai_provider:cli_main"

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "pre-commit>=3.4.0",
]